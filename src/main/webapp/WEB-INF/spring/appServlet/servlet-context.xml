<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- MVC를 사용시 필요한 몇가지 빈들을 자동으로 등록해 줌 -->
	<annotation-driven />
 	
 	<!-- Configures Handler Interceptors -->    
   	<interceptors>     
       	<!-- interceptor>  
            <mapping path="/home"/>  
           	<beans:ref bean="loginCheckInterceptor" />  
       	</interceptor-->  
        <!-- interceptor>  
          	<mapping path="/*"/>  
           	<beans:ref bean="commonInterceptor" />  
       	</interceptor-->  
       	<!-- 전체에 session 을 체크한다. -->
       	<beans:bean class="com.qp.lms.common.SessionInterceptor" />  
   	</interceptors>  
 	
   	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- fckeditor 로 들어오는 것들은 다 fckeditor로 가도록 한다. -->
	<resources mapping="/fckeditor/**" location="/fckeditor/" />
	
	<beans:bean id="downloadView" class="com.qp.lms.common.DownloadView" />
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order">
			<beans:value>2</beans:value>
		</beans:property>
	</beans:bean>
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order">
			<beans:value>1</beans:value>
		</beans:property>
	</beans:bean>
	<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
             <beans:property name="order" value="0"/>
             <beans:property name="defaultErrorView" value="error"/>
             <beans:property name="exceptionMappings">
                    <beans:props>
                           <beans:prop key="RuntimeException">error</beans:prop>
                    </beans:props>
             </beans:property>
	</beans:bean>
	
	<!-- 엑셀 양식 다운로드 -->
	<beans:bean name="ExcelFormCourseResourceView" class="com.qp.lms.excel.ExcelFormCourseResourceView"/>
	<beans:bean name="ExcelFormCompanyUserView" class="com.qp.lms.excel.ExcelFormCompanyUserView"/>

	<!-- 엑셀 다운로드 -->
	<beans:bean name="memberExcelView" class="com.qp.lms.excel.MemberExcelView"/>
	<beans:bean name="uploadInvalidExcel" class="com.qp.lms.excel.UploadInvalidExcelView"/>
	
	
	
	<context:component-scan base-package="com.qp.lms" />
	
	<!-- Message .properties sources
	   ResourceBundleMessageSource를 사용하면WEB-INF/classes에 존재해야함
	   ReloadableResourceBundleMessageSource를 사용하면 경로를 변경할 수 있음   --> 
    <beans:bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
        <beans:property name="basenames" value="/WEB-INF/message/messages"/>
    </beans:bean>
 

    <!-- bean 등록 --> 
    <!-- Locale resolver : locale 변경 --> 
    <beans:bean id="localeResolver"
        class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <beans:property name="defaultLocale" value="ko" />
    </beans:bean>	
   
    <!-- uploading files. -->
	<beans:bean id="multipartResolver"   class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
    	<beans:property name="maxUploadSize" value="10000000"/>
	</beans:bean>
    <!-- uploading files error -->
    <beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	 	<beans:property name="exceptionMappings">
		 	<beans:props>
			 	<beans:prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">
					error_fileupload
			 	</beans:prop>
		 	</beans:props>
	 	</beans:property>
	</beans:bean>
	
	<!-- Interface 구현없이 Transaction을 하도록 설정 --> 
	<tx:annotation-driven proxy-target-class="true"/>
    



    
    
</beans:beans>
