<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="axCompany">

	<select id="axCompanyList" resultType="hashmap">
		SELECT 	A.*
				,IFNULL(B.CNT, 0) EMPLOYEE_CNT
				,IFNULL(C.CNT, 0) AUTH_CNT
				,DATE_FORMAT(IFNULL(A.UPDATE_DATE, A.CREATE_DATE), '%y.%m.%d %H:%i') LAST_UPDATE_DATE
				,IFNULL(U2.USER_NAME, U1.USER_NAME) LAST_UPDATE_USER
				,'N' NEW_FLAG
		FROM 	COMPANY A
					LEFT OUTER JOIN (
						SELECT 	COMP_CD, COUNT(*) CNT
                        FROM 	USER
                        GROUP 	BY COMP_CD ) B ON B.COMP_CD = A.COMP_CD
	  	            LEFT OUTER JOIN (
	  	            	SELECT 	COMP_CD
	  	            			,COUNT(*) CNT
	  	            	FROM 	COMPANY_AUTH
	  	            	GROUP	BY COMP_CD ) C ON C.COMP_CD = A.COMP_CD             
                    LEFT OUTER JOIN USER U1 ON A.CREATE_USER = U1.USER_ID
	  	            LEFT OUTER JOIN USER U2 ON A.UPDATE_USER = U2.USER_ID    
		WHERE	C2C_YN = 'N'	  	            	
		<if test="SEARCH_STR != null and SEARCH_STR != ''">
		  AND ( UPPER(A.COMP_CD) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') OR UPPER(A.COMP_NAME) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') )
		</if>			 
		ORDER BY COMP_NAME
	</select>
	
	<insert id="axCompanyInsert" parameterType="hashmap">
		INSERT INTO COMPANY(COMP_CD, COMP_NAME, SUB_DOMAIN, ADDR, ZIPCODE, 
						COMP_TEL, FAX,  BUSINESS_NO, OWNER_NAME, LOGIN_IMG, GNB_IMG, 
    	                CREATE_DATE, CREATE_USER, C2C_YN, MOBILE, C2C_USER_ID, USE_YN)
    	VALUES (#{COMP_CD}, #{COMP_NAME}, #{SUB_DOMAIN}, #{ADDR}, #{ZIPCODE}, 
    			#{COMP_TEL}, #{FAX}, #{BUSINESS_NO}, #{OWNER_NAME}, 'N', 'N',
    	        CURRENT_TIMESTAMP, #{SESSION_USER_ID}, #{C2C_YN}, #{MOBILE}, #{C2C_USER_ID}, #{USE_YN})
	</insert>  
	
	<update id="axCompanyUpdate" parameterType="hashmap">
		UPDATE 	COMPANY
    	   SET 	COMP_NAME = #{COMP_NAME}
				,SUB_DOMAIN = #{SUB_DOMAIN}
				,ADDR = #{ADDR}
				,ZIPCODE = #{ZIPCODE}
				,COMP_TEL = #{COMP_TEL}
				,FAX = #{FAX}
				,BUSINESS_NO = #{BUSINESS_NO}
				,OWNER_NAME = #{OWNER_NAME}
				,LOGIN_IMG = #{LOGIN_IMG}
				,GNB_IMG = #{GNB_IMG}
				,MOBILE = #{MOBILE}
				,C2C_USER_ID = #{C2C_USER_ID}
				,USE_YN = #{USE_YN}
    	       	,UPDATE_DATE = CURRENT_TIMESTAMP
    	       	,UPDATE_USER = #{SESSION_USER_ID}
    	 WHERE 	COMP_CD = #{COMP_CD}
	</update>    
	
	<delete id="axCompanyDelete" parameterType="hashmap">
		DELETE FROM COMPANY
		 WHERE COMP_CD = #{COMP_CD}
	</delete>  
	
	<select id="axCompanyPk" parameterType="hashmap" resultType="int">
		SELECT 	COUNT(*) CNT
    	FROM 	COMPANY
    	WHERE 	COMP_CD = #{COMP_CD}
	</select>

	<select id="axCompanyOne" resultType="hashmap">
		SELECT 	A.*
		FROM 	COMPANY A                 
	 	WHERE 	COMP_CD = #{COMP_CD}
	</select>

	<update id="axCompanyImageUpdate" parameterType="hashmap">
		UPDATE 	COMPANY
    	   SET 	UPDATE_DATE = CURRENT_TIMESTAMP
    	       	,UPDATE_USER = #{SESSION_USER_ID}
		   <if test="kind != null and kind == 'LOGIN'"> ,LOGIN_IMG = 'Y'</if>
		   <if test="kind != null and kind == 'GNB'"> ,GNB_IMG = 'Y'</if>
    	 WHERE 	COMP_CD = #{COMP_CD}
	</update>    

	<select id="axCompanyC2cList" resultType="hashmap">
		SELECT 	A.*
				,DATE_FORMAT(IFNULL(A.UPDATE_DATE, A.CREATE_DATE), '%y.%m.%d %H:%i') LAST_UPDATE_DATE
				,IFNULL(U2.USER_NAME, U1.USER_NAME) LAST_UPDATE_USER
				,U3.USER_NAME
				,'N' NEW_FLAG
				,'' USER_ID
		FROM 	COMPANY A
                    LEFT OUTER JOIN USER U1 ON A.CREATE_USER = U1.USER_ID
	  	            LEFT OUTER JOIN USER U2 ON A.UPDATE_USER = U2.USER_ID                 
	  	            LEFT OUTER JOIN USER U3 ON A.C2C_USER_ID = U3.USER_ID                 
		WHERE	C2C_YN = 'Y'	  	            	
		<if test="SEARCH_STR != null and SEARCH_STR != ''">
		  AND ( UPPER(A.COMP_CD) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') OR UPPER(A.COMP_NAME) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') )
		</if>			 
		ORDER BY COMP_NAME
	</select>

	<select id="axCompanyAuthList" resultType="hashmap">
		SELECT 	A.SEQ
				,A.COMP_CD
				,A.AUTH_KEY
				,A.INFO1
				,A.INFO2
				,A.INFO3
				,DATE_FORMAT(IFNULL(A.UPDATE_DATE, A.CREATE_DATE), '%y.%m.%d %H:%i') LAST_UPDATE_DATE
				,IFNULL(U2.USER_NAME, U1.USER_NAME) LAST_UPDATE_USER
				,'N' NEW_FLAG
		FROM 	COMPANY_AUTH A                 
                    LEFT OUTER JOIN USER U1 ON A.CREATE_USER = U1.USER_ID
	  	            LEFT OUTER JOIN USER U2 ON A.UPDATE_USER = U2.USER_ID                 
		WHERE	A.COMP_CD = #{COMP_CD}	            	
		ORDER 	BY A.AUTH_KEY
	</select>
	
	<insert id="axCompanyAuthInsert" parameterType="hashmap">
		INSERT INTO COMPANY_AUTH(COMP_CD, AUTH_KEY, INFO1, INFO2, INFO3, CREATE_DATE, CREATE_USER)
    	VALUES (#{COMP_CD}, #{AUTH_KEY}, #{INFO1}, #{INFO2}, #{INFO3}, CURRENT_TIMESTAMP, #{SESSION_USER_ID})
	</insert>  
	
	<update id="axCompanyAuthUpdate" parameterType="hashmap">
		UPDATE 	COMPANY_AUTH
    	   SET 	INFO1 = #{INFO1}
				,INFO2 = #{INFO2}
				,INFO3 = #{INFO3}
    	       	,UPDATE_DATE = CURRENT_TIMESTAMP
    	       	,UPDATE_USER = #{SESSION_USER_ID}
    	WHERE 	SEQ = #{SEQ}
	</update>    
	
	<delete id="axCompanyAuthDelete" parameterType="hashmap">
		DELETE 	FROM COMPANY_AUTH
    	WHERE 	SEQ = #{SEQ}
	</delete>  	
</mapper>