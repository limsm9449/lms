<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="axComm">

	<select id="axDdCategoryLevel1" resultType="hashmap">
		SELECT CODE value,
		       CODE_NAME text
		  FROM CATEGORY
		 WHERE USE_YN = 'Y'
		   AND DEPTH = 1
		 ORDER BY 2  
	</select>
	
	<select id="axDdCategoryLevel2" parameterType="hashmap" resultType="hashmap">
		SELECT CODE value,
		       CODE_NAME text
		  FROM CATEGORY
		 WHERE USE_YN = 'Y'
		   AND DEPTH = 2
		   AND PARENT_CODE = #{LEVEL1_CODE} 
		 ORDER BY 2  
	</select>
	
	<select id="axDdCategoryLevel3" parameterType="hashmap" resultType="hashmap">
		SELECT CODE value,
		       CODE_NAME text
		  FROM CATEGORY
		 WHERE USE_YN = 'Y'
		   AND DEPTH = 3
		   AND PARENT_CODE = #{LEVEL2_CODE} 
		 ORDER BY 2  
	</select>
	
	<select id="axDdTeacher" resultType="hashmap">
		SELECT USER_ID value,
		       USER_NAME text
		  FROM USER
		 WHERE TEACHER_YN = 'Y'
		 ORDER BY 2
	</select>

	<select id="axDdTutor" resultType="hashmap">
		SELECT USER_ID value,
		       USER_NAME text
		  FROM USER
		 WHERE TUTOR_YN = 'Y'
<if test="COURSE_ID != null and COURSE_ID != ''">		  
		 AND	USER_ID NOT IN ( SELECT TUTOR_ID FROM COURSE WHERE COURSE_ID = #{COURSE_ID}) 
</if>		 
		 ORDER BY USER_NAME
	</select>

	<select id="axDdCompanyTutor" resultType="hashmap">
		SELECT USER_ID value,
		       USER_NAME text
		  FROM USER
		 WHERE TUTOR_YN = 'Y'
		   AND COMP_CD = #{COMP_CD} 
		 ORDER BY USER_NAME
	</select>
	
	<select id="axDdQuestGroup" resultType="hashmap">
		SELECT QG_ID value
		       ,GROUP_NAME text
		  FROM QUEST_GROUP
		 WHERE USE_YN = 'Y'
		 ORDER BY 2 	
	</select>

	<select id="axDdCourseCode" resultType="hashmap">
		SELECT A.COURSE_CODE value
		       ,A.COURSE_NAME text
		       ,IFNULL(B.MOBILE_YN,'N') MOBILE_YN
		       ,IFNULL(B.COURSE_COST,0) COURSE_COST
		       ,IFNULL(B.TUTOR_ID,'') TUTOR_ID
		       ,IFNULL(B.REPORT_RATE,0) REPORT_RATE
		       ,IFNULL(B.EXAM_RATE,0) EXAM_RATE
		       ,IFNULL(B.DISCUSSION_RATE,0) DISCUSSION_RATE
		       ,IFNULL(B.PROGRESS_RATE,0) PROGRESS_RATE
		       ,IFNULL(B.STUDY_MAX_WEEK,0) STUDY_MAX_WEEK
		       ,IFNULL(B.WORKER_CARD_YN,'N') WORKER_CARD_YN
		       ,IFNULL(B.SUPPORT_EMPLOYER_YN,'N') SUPPORT_EMPLOYER_YN
		       ,IFNULL(B.NORMAL_COURSE_YN,'N') NORMAL_COURSE_YN
		  FROM COURSE_CODE A
		  			LEFT OUTER JOIN COURSE_MASTER B ON B.COURSE_CODE = A.COURSE_CODE
		 WHERE A.USE_YN = 'Y'
		   AND A.CODE = #{LEVEL3_CODE}
		 ORDER BY 2 	
	</select>
	
	<select id="UnregisteredCourseCode" resultType="hashmap">
		SELECT COURSE_CODE value
		       ,COURSE_NAME text
		  FROM COURSE_CODE
		 WHERE USE_YN = 'Y'
		   AND CODE = #{LEVEL3_CODE}
		   AND COURSE_CODE NOT IN (SELECT COURSE_CODE FROM COURSE_MASTER)
		 ORDER BY 2 	
	</select>
	
	<select id="axDdExamCourseCode" resultType="hashmap">
		SELECT A.COURSE_CODE value
		       ,A.COURSE_NAME text
		       ,C.QUESTION_CNT
		  FROM COURSE_CODE A 	LEFT JOIN COURSE_MASTER B ON A.COURSE_CODE = B.COURSE_CODE
		  						LEFT JOIN (
		  							SELECT 	COURSE_CODE,
		  									COUNT(*) QUESTION_CNT
		  							FROM 	COURSE_EXAM
		  							WHERE 	USE_YN = 'Y'
		  							GROUP 	BY COURSE_CODE ) C ON A.COURSE_CODE = C.COURSE_CODE
		 WHERE B.EXAM_RATE > 0
		   AND A.CODE = #{LEVEL3_CODE}
		 ORDER BY 2 	
	</select>
	
	<select id="axMaxCourseCode" parameterType="hashmap" resultType="hashmap">
		SELECT  DATE_FORMAT(NOW(), '%Y%m') YYYYMMDD,
				IFNULL(MAX(CAST(SUBSTR(COURSE_CODE,7,3) AS UNSIGNED)), 0) MAX_SEQ
		FROM 	COURSE_CODE
		WHERE 	COURSE_CODE LIKE CONCAT(DATE_FORMAT(NOW(), '%Y%m'),'%')
	</select>

	<select id="axDdCompany" resultType="hashmap">
		SELECT 	1 ORD
				,COMP_CD value
		        ,COMP_NAME text
		  FROM  COMPANY
		 WHERE	COMP_CD = 'B2C' 
		 UNION 	ALL
		SELECT 	2 ORD
				,COMP_CD value
		        ,COMP_NAME text
		  FROM  COMPANY
		 WHERE	COMP_CD != 'B2C'
		   AND	C2C_YN = 'N'
		 UNION 	ALL
		SELECT 	3 ORD
				,COMP_CD value
		        ,COMP_NAME text
		  FROM  COMPANY
		 WHERE	COMP_CD != 'B2C'
		   AND	C2C_YN = 'Y'
		 ORDER BY 1, 2 	
	</select>
	
	<select id="axDdCompany1" resultType="hashmap">
		SELECT 	COMP_CD value
		        ,COMP_NAME text
		FROM  	COMPANY
		WHERE	COMP_CD != 'B2C'
		AND		C2C_YN = 'N'
	 	ORDER 	BY 1 	
	</select>
	
	<select id="axDdCompany2" resultType="hashmap">
		SELECT 	COMP_CD value
		        ,COMP_NAME text
		FROM  	COMPANY
		WHERE	COMP_CD != 'B2C'
		AND		C2C_YN = 'Y'
	 	ORDER 	BY 1 	
	</select>
	
	<select id="axDdExamType" resultType="hashmap">
		SELECT 	SEQ value
		        ,TYPE_NAME text
		  FROM  COURSE_EXAM_TYPE
		 WHERE	COURSE_CODE = #{COURSE_CODE} 
		 ORDER BY 1, 2 	
	</select>

	<select id="axDdCourseReport" resultType="hashmap">
		SELECT 	SEQ value
		        ,TITLE text
		  FROM  COURSE_REPORT
		 WHERE	COURSE_CODE = #{COURSE_CODE} 
		 ORDER BY 1, 2 	
	</select>


	<select id="axDdReportCourseCode" resultType="hashmap">
		SELECT A.COURSE_CODE value
		       ,A.COURSE_NAME text
		  FROM COURSE_CODE A 	LEFT JOIN COURSE_MASTER B ON A.COURSE_CODE = B.COURSE_CODE
		 WHERE B.REPORT_RATE > 0
		   AND A.CODE = #{LEVEL3_CODE}
		 ORDER BY 2 	
	</select>
	
	<select id="axDdCode" resultType="hashmap">
		SELECT 	DD_KEY value
		        ,DD_VALUE text
		  FROM  CODE
		 WHERE	DD_MAIN = #{DD_MAIN} 
		 ORDER BY ORD 	
	</select>

	<select id="axDdBank" resultType="hashmap">
		SELECT 	SEQ value
		        ,CONCAT(BANK_NAME,' ',ACC_NO,' ',USER) text
		FROM  	BANK
       	WHERE 	USE_YN = 'Y'
		ORDER 	BY 2	
	</select>

	<select id="axDdSetting" resultType="hashmap">
		SELECT 	OPTION_KEY value
		        ,OPTION_VALUE text
		  FROM  SETTING
<if test="OPTION_KEY != null and OPTION_KEY != ''">		  
		 WHERE	OPTION_KEY = #{OPTION_KEY} 
</if>		 
		 ORDER BY OPTION_KEY 	
	</select>
    
    <select id="axDdContentsManager" resultType="hashmap">
		SELECT USER_ID value,
		       USER_NAME text
		  FROM USER
		 WHERE CONTENTS_MANAGER_YN = 'Y'
		 ORDER BY USER_NAME
	</select>
    
    <select id="axDdCourseTutor" resultType="hashmap">
		SELECT 	A.TUTOR_ID value,
				U1.USER_NAME text
		FROM 	COURSE A
		  			LEFT OUTER JOIN USER U1 ON A.TUTOR_ID = U1.USER_ID
		WHERE 	COURSE_ID = #{COURSE_ID}
        UNION
		SELECT 	A.TUTOR_ID value,
				U1.USER_NAME text
		FROM 	COURSE_TUTOR A
		  			LEFT OUTER JOIN USER U1 ON A.TUTOR_ID = U1.USER_ID
		WHERE 	A.COURSE_ID = #{COURSE_ID}
        AND		A.USE_YN = 'Y'
		ORDER 	BY 2
	</select>

    
    <select id="lastInsertId" resultType="String">
		SELECT LAST_INSERT_ID() LAST_ID
	</select>

    <insert id="axAttachFromTempAttachToAttachInsert" parameterType="hashmap">
		INSERT INTO ATTACH (KIND,P_SEQ,FILE_NAME,FILE_SIZE,FILE_PATH,ORG_FILE_NAME,CREATE_DATE)
		SELECT KIND,#{P_SEQ},FILE_NAME,FILE_SIZE,FILE_PATH,ORG_FILE_NAME,CREATE_DATE
		  FROM ATTACH_TEMP
		 WHERE USER_ID = #{USER_ID}
    </insert>	

	<delete id="axAttachTempDelete" parameterType="hashmap">
		DELETE FROM ATTACH_TEMP
		 WHERE USER_ID = #{USER_ID}
    </delete>		    
    
    <select id="axAttachList" parameterType="hashmap" resultType="hashmap">
		SELECT SEQ,
		       KIND,
		       P_SEQ,
		       FILE_NAME,
		       FILE_SIZE,
		       FILE_PATH,
		       ORG_FILE_NAME,
		       CREATE_DATE
		  FROM ATTACH
		 WHERE KIND = #{KIND}
		   AND P_SEQ = #{P_SEQ}
    </select>

	<delete id="axAttachDelete" parameterType="hashmap">
		DELETE FROM ATTACH
		 WHERE KIND = #{KIND}
		   AND P_SEQ = #{P_SEQ}
    </delete>		    
    
    <select id="axCompCdFromSubDomain" resultType="hashmap">
    	SELECT COMP_CD, C2C_YN, IFNULL(USE_YN,'Y') USE_YN, COMP_NAME
    	  FROM COMPANY
    	 WHERE SUB_DOMAIN = #{SUB_DOMAIN}
    </select>

	<select id="axUserSearchList" parameterType="hashmap" resultType="hashmap">
		SELECT 	*
		FROM 	USER
		WHERE 	1 = 1
		<if test="SEARCH_STR != null and SEARCH_STR != ''">
			AND ( UPPER(USER_ID) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') OR UPPER(USER_NAME) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') )
		</if>			 
		<if test="kind == 'C2C_ADD_USER'">
			AND TEACHER_YN = 'Y'
			AND USER_ID NOT IN ( SELECT C2C_USER_ID FROM COMPANY WHERE C2C_YN = 'Y' AND C2C_USER_ID IS NOT NULL) 
		</if>			 
		ORDER 	BY USER_NAME  
	</select>

	<select id="axCourseSearchList" parameterType="hashmap" resultType="hashmap">
	    SELECT 	C.CATEGORY_NAME
	           	,A.COURSE_ID
		       	,A.COURSE_CODE
		       	,B.COURSE_NAME
               	,A.YEAR
				,A.MONTH
		       	,IFNULL(A.CHASU, 0) CHASU
               	,A.COMP_CD
		       	,A.TUTOR_ID
		       	,A.COURSE_COST
		       	,A.C_PERIOD
               	,A.REPORT_RATE
				,A.EXAM_RATE
				,A.DISCUSSION_RATE
				,A.PROGRESS_RATE
                ,IFNULL(A.TERM_YN,'N') TERM_YN
                ,IFNULL(A.TERM_PERIOD_FROM, '') TERM_PERIOD_FROM
                ,IFNULL(A.TERM_PERIOD_TO, '') TERM_PERIOD_TO
                ,IFNULL(A.STUDY_PERIOD_FROM, '') STUDY_PERIOD_FROM
                ,IFNULL(A.STUDY_PERIOD_TO, '') STUDY_PERIOD_TO
               	,A.COMP_CD TARGET_COMP_CD
		  FROM COURSE A LEFT OUTER JOIN COURSE_CODE B ON A.COURSE_CODE = B.COURSE_CODE
		                LEFT OUTER JOIN (
							   SELECT C3.CODE C3_CODE, C2.CODE C2_CODE, C1.CODE C1_CODE,
									  CONCAT(C1.CODE_NAME,' > ',C2.CODE_NAME,' > ',C3.CODE_NAME) CATEGORY_NAME
								 FROM CATEGORY C3 LEFT OUTER JOIN CATEGORY C2 ON C3.PARENT_CODE = C2.CODE
									      LEFT OUTER JOIN CATEGORY C1 ON C2.PARENT_CODE = C1.CODE
							    WHERE C3.DEPTH = 3) C ON B.CODE = C.C3_CODE
						LEFT OUTER JOIN COURSE_EXAM_TYPE F ON F.SEQ = A.COURSE_EXAM_TYPE_ID
		  	            LEFT OUTER JOIN COMPANY I ON I.COMP_CD = A.COMP_CD  
		WHERE 	IFNULL(A.OPEN_YN,'N') IN ('Y')
		AND 	IFNULL(A.CLOSE_YN,'N') IN ('N')
<if test="LEVEL1_CODE != null and LEVEL1_CODE != ''"> AND C.C1_CODE = #{LEVEL1_CODE}</if>
<if test="LEVEL2_CODE != null and LEVEL2_CODE != ''"> AND C.C2_CODE = #{LEVEL2_CODE}</if>
<if test="LEVEL3_CODE != null and LEVEL3_CODE != ''"> AND C.C3_CODE = #{LEVEL3_CODE}</if>
<if test="COMPANY != null and COMPANY == 'B2C'">
		AND 	IFNULL(A.COMP_CD,'B2C') = 'B2C'
</if>
<if test="COMPANY != null and COMPANY == 'B2B'">
		AND 	IFNULL(A.COMP_CD,'B2C') != 'B2C'
		AND 	IFNULL(I.C2C_YN,'N') = 'N'
</if>
<if test="COMPANY != null and COMPANY == 'C2C'">
		AND 	IFNULL(A.COMP_CD,'B2C') != 'B2C'
		AND 	IFNULL(I.C2C_YN,'N') = 'Y'
</if>
<if test="COMPANY2 != null and COMPANY2 != ''">
		AND 	IFNULL(A.COMP_CD,'B2C') = #{COMPANY2}
</if>
<if test="SEARCH_STR != null and SEARCH_STR != ''">
		AND ( UPPER(A.COURSE_CODE) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') OR UPPER(B.COURSE_NAME) LIKE CONCAT('%',UPPER(#{SEARCH_STR}),'%') )
</if>	
	 ORDER BY C.CATEGORY_NAME,B.COURSE_NAME,A.YEAR,A.MONTH,A.CHASU 
	</select>
    
    <select id="axDdAllFaqCategory" resultType="hashmap">
		SELECT DD_KEY value,
		       DD_VALUE text
		  FROM CODE 
		 WHERE DD_MAIN IN ('FAQ_B2C','FAQ_B2B','FAQ_C2C')
		 ORDER BY DD_KEY
	</select>

	<select id="axDdPointKind" resultType="hashmap">
		SELECT 	POINT_CODE value
		        ,POINT_NAME text
		  FROM  POINT_CODE
		 ORDER BY ORD 	
	</select>

	<select id="axDdChannelKind" resultType="hashmap">
		SELECT 	1 ORD
				,'Q_CHANNEL' value
		        ,'Q.채널' text
		UNION 	ALL
		SELECT 	2 ORD
				,COMP_CD value
				,CONCAT('P.채널 - ',COMP_NAME) text
		FROM 	COMPANY        
		WHERE	C2C_YN = 'Y'
		AND		USE_YN = 'Y'
		ORDER 	BY 1, 3
	</select>
    
</mapper>