<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="postscript">

	<sql id="postscriptAllQuery">
    	<![CDATA[
		SELECT 	A.*
		       	,DATE_FORMAT(IFNULL(A.UPDATE_DATE,A.CREATE_DATE), '%y.%m.%d %H:%i') UPDATE_DATE_STR
		       	,@ROWNUM := @ROWNUM + 1 ROWNUM
                ,CASE WHEN IFNULL(A.EVAL, 0) > 0 AND IFNULL(A.EVAL, 0) <= 0.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 0.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL1
                ,CASE WHEN IFNULL(A.EVAL, 0) > 1 AND IFNULL(A.EVAL, 0) <= 1.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 1.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL2
                ,CASE WHEN IFNULL(A.EVAL, 0) > 2 AND IFNULL(A.EVAL, 0) <= 2.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 2.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL3
                ,CASE WHEN IFNULL(A.EVAL, 0) > 3 AND IFNULL(A.EVAL, 0) <= 3.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 3.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL4
                ,CASE WHEN IFNULL(A.EVAL, 0) > 4 AND IFNULL(A.EVAL, 0) <= 4.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 4.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL5
                ,B.USER_NAME
                ,D.COURSE_NAME
                ,D.COURSE_CODE
		FROM 	POSTSCRIPT A LEFT OUTER JOIN USER B ON B.USER_ID = A.USER_ID
					LEFT OUTER JOIN COURSE C ON C.COURSE_ID = A.COURSE_ID
					LEFT OUTER JOIN COURSE_CODE D ON D.COURSE_CODE = C.COURSE_CODE
		       		,(SELECT @ROWNUM := 0) NUM
		WHERE	C.COMP_CD = 'B2C'		       		
		ORDER 	BY IFNULL(A.UPDATE_DATE, A.CREATE_DATE) DESC
		]]>
	</sql>
	<select id="postscriptAllList" parameterType="PostScript" resultType="PostScript">
		SELECT 	DATA.* 
		FROM 	(
					<include refid="postscriptAllQuery" />
				) DATA 
		LIMIT #{limitStart},#{limitUnit}
	</select>	        
	<select id="postscriptAllTotal" parameterType="PostScript" resultType="PostScript">
		SELECT 	COUNT(*) CNT
		FROM	(
			<include refid="postscriptAllQuery" />
				) DATA
	</select>


    <select id="coursePostscriptList" parameterType="PostScript" resultType="PostScript">
    <![CDATA[
	    SELECT 	A.USER_ID
	           	,B.USER_NAME
		       	,A.CONTENTS
		       	,A.EVAL
                ,CASE WHEN IFNULL(A.EVAL, 0) > 0 AND IFNULL(A.EVAL, 0) <= 0.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 0.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL1
                ,CASE WHEN IFNULL(A.EVAL, 0) > 1 AND IFNULL(A.EVAL, 0) <= 1.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 1.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL2
                ,CASE WHEN IFNULL(A.EVAL, 0) > 2 AND IFNULL(A.EVAL, 0) <= 2.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 2.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL3
                ,CASE WHEN IFNULL(A.EVAL, 0) > 3 AND IFNULL(A.EVAL, 0) <= 3.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 3.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL4
                ,CASE WHEN IFNULL(A.EVAL, 0) > 4 AND IFNULL(A.EVAL, 0) <= 4.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 4.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL5
	       	   	,DATE_FORMAT(IFNULL(A.UPDATE_DATE,A.CREATE_DATE), '%Y.%m.%d') CREATE_DATE
		FROM 	POSTSCRIPT A LEFT OUTER JOIN USER B ON A.USER_ID = B.USER_ID
		WHERE 	A.COURSE_ID = #{courseId}
	 	ORDER 	BY 10 DESC
	 	LIMIT	20
	]]>
    </select>	

	<sql id="postscript">
	<![CDATA[
		SELECT 	A.USER_ID
	           	,B.USER_NAME
		       	,A.CONTENTS
		       	,A.EVAL
                ,CASE WHEN IFNULL(A.EVAL, 0) > 0 AND IFNULL(A.EVAL, 0) <= 0.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 0.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL1
                ,CASE WHEN IFNULL(A.EVAL, 0) > 1 AND IFNULL(A.EVAL, 0) <= 1.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 1.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL2
                ,CASE WHEN IFNULL(A.EVAL, 0) > 2 AND IFNULL(A.EVAL, 0) <= 2.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 2.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL3
                ,CASE WHEN IFNULL(A.EVAL, 0) > 3 AND IFNULL(A.EVAL, 0) <= 3.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 3.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL4
                ,CASE WHEN IFNULL(A.EVAL, 0) > 4 AND IFNULL(A.EVAL, 0) <= 4.5 THEN 'star_half'
					 WHEN IFNULL(A.EVAL, 0) > 4.5 THEN 'star_active'
                     ELSE 'star_inactive' END EVAL5
	       	   	,DATE_FORMAT(IFNULL(A.UPDATE_DATE,A.CREATE_DATE), '%Y.%m.%d') CREATE_DATE
		       	,@ROWNUM := @ROWNUM + 1 ROWNUM
		FROM 	POSTSCRIPT A LEFT OUTER JOIN USER B ON A.USER_ID = B.USER_ID
				,(SELECT @ROWNUM := 0) NUM
		WHERE 	A.COURSE_ID = #{courseId}
	 	ORDER 	BY 10 DESC
	 ]]>
	</sql>
	<select id="postscriptList" parameterType="PostScript" resultType="PostScript">
		SELECT 	DATA.* 
		FROM 	(
					<include refid="postscript" />
				) DATA 
		LIMIT #{limitStart},#{limitUnit}
	</select>	        
	<select id="postscriptTotal" parameterType="PostScript" resultType="PostScript">
		SELECT 	COUNT(*) CNT
		FROM	(
			<include refid="postscript" />
				) DATA
	</select>

    <select id="postscriptData" parameterType="PostScript" resultType="PostScript">
    SELECT EVAL,
           CONTENTS
	  FROM POSTSCRIPT
	 WHERE COURSE_ID = #{courseId}
	   AND USER_ID = #{userId}
    </select>		
         
   	<select id="postscriptIns" parameterType="PostScript">
	INSERT INTO POSTSCRIPT(COURSE_ID,USER_ID,CONTENTS,EVAL,CREATE_DATE)
	VALUES (#{courseId},#{userId},#{contents},#{eval},CURRENT_TIMESTAMP)
	</select>
	
	<update id="postscriptFlagUpd" parameterType="PostScript">
		UPDATE 	COURSE_EVAL
		SET		POSTSCRIPT_YN = 'Y'
		WHERE	COURSE_ID = #{courseId}
	 	AND 	USER_ID = #{userId}
	</update>

    <insert id="postscriptPointInsert" parameterType="Member">
    	INSERT INTO POINT ( USER_ID, POINT_DATE, VALID_DATE, POINT_CODE, IN_POINT, REF_ID )
	    VALUES ( #{userId}, CURRENT_TIMESTAMP, 
	    			DATE_ADD(CURRENT_TIMESTAMP, INTERVAL (SELECT VALID_MONTH FROM POINT_CODE WHERE POINT_CODE = 'POSTSCRIPT') MONTH),
	    			'POSTSCRIPT', 
	    			(SELECT POINT FROM POINT_CODE WHERE POINT_CODE = 'POSTSCRIPT'), #{courseId} )
    </insert>

	
</mapper>